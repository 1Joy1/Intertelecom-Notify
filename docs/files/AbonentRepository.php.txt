<?php
/**
 * Class AbonentRepository | AbonentRepository.php
 */

/**
 * Хранилище абонентов.
 * Возвращает список абонентов и их сообщения сгенерированные при успешном предыдущем
 * запуске программы.
 * Возвращает колличество повторений сгенерированных сообщений одного и того же содержания и
 * время последнего изменения состояния хранилища.
 * А так же реализует обновление сообщений в хранилище.
 *
 * @author Marshak Igor aka !Joy!
 * @package Intertelecom
 * @version v.1.1 (17.09.17)
 * @copyright Copyright (c) 2017 Marshak Igor aka !Joy!
 *
 */
class AbonentRepository
{
    /**
     * Тип реализации хранилища (MySQL, PostgreSQL, Redis или другое)
     *
     * @var AbonentRepositorySource_Interface
     */
    protected $source;

    /**
     * Конструктор, при создании объекта устанавливает в свойство source (тип используемой БД)
     *
     * @param AbonentRepositorySource_Interface $source
     * @return void
     */
    public function __construct(AbonentRepositorySource_Interface $source) {

        $this->source = $source;
    }


    /**
     * Обновление (увеличение) счетчика сообщений в базе данных.
     *
     * @param int $count
     * @param string $abonent_number
     * @return void
     */
    public function updateCount($count, $abonent_number) {

        $this->source->updateCount($count, $abonent_number);
    }



    /**
     * Обновление сообщения и сброс счетчика сообщений в базе данных.
     *
     * @param string $message
     * @param string $abonent_number
     * @return void
     */
    public function updateMessageAndResetCount($message, $abonent_number) {

        $this->source->updateMessageAndResetCount($message, $abonent_number);
    }

    /**
     * Получает всех абонентов
     *
     * @return Abonent[]
     */
    public function getAllAbonents() {

        return $this->source->getAllAbonents();
    }
}
